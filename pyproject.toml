[tool.poetry]
name = "netlify-builds"
version = "1.1.6"
description = "A command line utility to check build usage across multiple Netlify accounts"
authors = ["Bruno Alla <alla.brunoo@gmail.com>"]
license = "MIT"
readme = "README.md"
repository = "https://github.com/browniebroke/netlify-builds"
classifiers = [
    "Development Status :: 2 - Pre-Alpha",
    "Intended Audience :: Developers",
    "Natural Language :: English",
    "Operating System :: OS Independent",
    "Topic :: Software Development :: Libraries",
    "Programming Language :: Python :: 3.12",
]
packages = [
    { include = "netlify_builds", from = "src" },
]

[tool.poetry.urls]
"Bug Tracker" = "https://github.com/browniebroke/netlify-builds/issues"
"Changelog" = "https://netlify-builds.readthedocs.io/changelog.html"
"Twitter" = "https://twitter.com/_BrunoAlla"
"Mastodon" = "https://fosstodon.org/@browniebroke"

[tool.poetry.scripts]
netlify-builds = "netlify_builds.cli:main"

[tool.poetry.dependencies]
python = "^3.8"
httpx = "^0.26.0"
python-dateutil = "^2.8"
rich = ">=10"

[tool.poetry.group.dev.dependencies]
pytest = "^7.0"
pytest-asyncio = "^0.23.0"
pytest-cov = "^4.0"
pytest-mock = "^3.3"
respx = "^0.20.0"
time-machine = "^2.0"

[tool.semantic_release]
version_toml = ["pyproject.toml:tool.poetry.version"]
version_variables = [
    "src/netlify_builds/__init__.py:__version__",
]
build_command = "pip install poetry && poetry build"

[tool.semantic_release.changelog]
exclude_commit_patterns = [
    "chore*",
    "ci*",
]

[tool.semantic_release.changelog.environment]
keep_trailing_newline = true

[tool.semantic_release.branches.main]
match = "main"

[tool.semantic_release.branches.noop]
match = "(?!main$)"
prerelease = true

[tool.pytest.ini_options]
addopts = "-v -Wdefault --cov=src"
pythonpath = ["src"]
asyncio_mode = "auto"

[tool.ruff]
target-version = "py38"
line-length = 88
ignore = [
    "D203", # 1 blank line required before class docstring
    "D212", # Multi-line docstring summary should start at the first line
    "D100", # Missing docstring in public module
    "D104", # Missing docstring in public package
    "D107", # Missing docstring in `__init__`
    "D401", # First line of docstring should be in imperative mood
]
select = [
    "B",   # flake8-bugbear
    "D",   # flake8-docstrings
    "C4",  # flake8-comprehensions
    "S",   # flake8-bandit
    "F",   # pyflake
    "E",   # pycodestyle
    "W",   # pycodestyle
    "UP",  # pyupgrade
    "I",   # isort
    "RUF", # ruff specific
]
[tool.ruff.per-file-ignores]
"tests/**/*" = [
    "D100",
    "D101",
    "D102",
    "D103",
    "D104",
    "S101",
]

[tool.ruff.isort]
known-first-party = ["netlify_builds", "tests"]

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"
