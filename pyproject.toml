[project]
name = "netlify-builds"
version = "1.3.0"
description = "A command line utility to check build usage across multiple Netlify accounts"
readme = "README.md"
license = { text = "MIT" }
authors = [
  { name = "Bruno Alla", email = "alla.brunoo@gmail.com" },
]
requires-python = ">=3.9"
classifiers = [
  "Development Status :: 2 - Pre-Alpha",
  "Intended Audience :: Developers",
  "Natural Language :: English",
  "Operating System :: OS Independent",
  "Programming Language :: Python :: 3 :: Only",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Programming Language :: Python :: 3.13",
  "Topic :: Software Development :: Libraries",
]

dependencies = [
  "httpx>=0.17",
  "python-dateutil>=2.8",
  "rich>=10",
]
urls."Bug Tracker" = "https://github.com/browniebroke/netlify-builds/issues"
urls.Changelog = "https://netlify-builds.readthedocs.io/changelog.html"
urls.Mastodon = "https://fosstodon.org/@browniebroke"
urls.repository = "https://github.com/browniebroke/netlify-builds"
urls.Twitter = "https://twitter.com/_BrunoAlla"
scripts.netlify-builds = "netlify_builds.cli:main"

[dependency-groups]
dev = [
  "pytest>=8",
  "pytest-asyncio>=0.23",
  "pytest-cov>=4",
  "pytest-mock>=3.3",
  "respx>=0.20",
  "time-machine>=2",
]

[tool.ruff]
target-version = "py39"
line-length = 88

lint.select = [
  "B",   # flake8-bugbear
  "C4",  # flake8-comprehensions
  "D",   # flake8-docstrings
  "E",   # pycodestyle
  "F",   # pyflake
  "I",   # isort
  "RUF", # ruff specific
  "S",   # flake8-bandit
  "UP",  # pyupgrade
  "W",   # pycodestyle
]
lint.ignore = [
  "D100", # Missing docstring in public module
  "D104", # Missing docstring in public package
  "D107", # Missing docstring in `__init__`
  "D203", # 1 blank line required before class docstring
  "D212", # Multi-line docstring summary should start at the first line
  "D401", # First line of docstring should be in imperative mood
]
lint.per-file-ignores."tests/**/*" = [
  "D100",
  "D101",
  "D102",
  "D103",
  "D104",
  "S101",
]
lint.isort.known-first-party = [ "netlify_builds", "tests" ]

[tool.pytest.ini_options]
addopts = "-v -Wdefault --cov=src"
pythonpath = [ "src" ]
asyncio_mode = "auto"

[tool.semantic_release]
version_toml = [ "pyproject.toml:project.version" ]
version_variables = [
  "src/netlify_builds/__init__.py:__version__",
]
build_command = """
pip install uv
uv lock
git add uv.lock
uv build
"""

[tool.semantic_release.changelog]
exclude_commit_patterns = [
  "chore.*",
  "ci.*",
  "Merge pull request .*",
]

[tool.semantic_release.changelog.environment]
keep_trailing_newline = true

[tool.semantic_release.branches.main]
match = "main"

[tool.semantic_release.branches.noop]
match = "(?!main$)"
prerelease = true
